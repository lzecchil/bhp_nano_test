{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "0fd5f090",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "total number of events= 8936\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import ROOT\n",
    "from ROOT import RDataFrame\n",
    "from ROOT import TChain, TSelector, TTree, TH1F, TCanvas, TFile, TEfficiency, TLegend\n",
    "from ROOT import TLorentzVector\n",
    "from ROOT import TVector3\n",
    "from array import array\n",
    "import numpy as np\n",
    "ROOT.gROOT.SetBatch(ROOT.kTRUE)\n",
    "file =\"../bph_nano_test/bph_nano_test_mc_TracksMuons.root\"\n",
    "f=TFile(file)\n",
    "tree=f.Get(\"Events\")\n",
    "#tree.Print()\n",
    "N = tree.GetEntries()\n",
    "print(\"total number of events=\",N)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 226,
   "id": "7e2889e5",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning in <TFile::Append>: Replacing existing TH1: h_IM_Phi (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: h_IM_Phi (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: h_IM_B (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: h_pt_Kp (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: h_pt_Km (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: h_pt_pip (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: h_pt_pim (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: h_Eta_Kp (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: h_Eta_Km (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: h_Eta_pip (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: h_Eta_pim (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: h_Phi_Kp (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: h_Phi_Km (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: h_Phi_pip (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: h_Phi_pim (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hNumK (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hNumKp (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hNumKm (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hNumpi (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hNumpip (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hNumpim (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hNum (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hDen (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hDenK (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hDenKp (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hDenKm (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hDenpi (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hDenpip (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hDenpim (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hdR (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hdRK (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hdRpi (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hNumPhi (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hDenPhi (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hNumKs (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hDenKs (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hdRPhi (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hdRKs (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hNumB (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hDenB (Potential memory leak).\n",
      "Warning in <TFile::Append>: Replacing existing TH1: hdRB (Potential memory leak).\n"
     ]
    }
   ],
   "source": [
    "h_IM_Phi=TH1F(\"h_IM_Phi\",\"K+K- invariant mass\",100,0.9,1.1)\n",
    "h_IM_Ks=TH1F(\"h_IM_Phi\",\"pi+pi- invariant mass\",100,0,1)\n",
    "h_IM_B=TH1F(\"h_IM_B\",\"K+K-pi+pi- invariant mass\",100,4.4,6)\n",
    "h_pt_Kp=TH1F(\"h_pt_Kp\",\"reco K+ pt distribution\",100,0,25)\n",
    "h_pt_Km=TH1F(\"h_pt_Km\",\"reco K- pt distribution\",100,0,25)\n",
    "h_pt_pip=TH1F(\"h_pt_pip\",\"reco pi+ pt distribution\",100,0,25)\n",
    "h_pt_pim=TH1F(\"h_pt_pim\",\"reco pi- pt distribution\",100,0,25)\n",
    "h_Eta_Kp=TH1F(\"h_Eta_Kp\",\"reco K+ Eta distribution\",100,-3,3)\n",
    "h_Eta_Km=TH1F(\"h_Eta_Km\",\"reco K- Eta distribution\",100,-3,3)\n",
    "h_Eta_pip=TH1F(\"h_Eta_pip\",\"reco pi+ Eta distribution\",100,-3,3)\n",
    "h_Eta_pim=TH1F(\"h_Eta_pim\",\"reco pi- Eta distribution\",100,-3,3)\n",
    "h_Phi_Kp=TH1F(\"h_Phi_Kp\",\"reco K+ Phi distribution\",100,-4,4)\n",
    "h_Phi_Km=TH1F(\"h_Phi_Km\",\"reco K- Phi distribution\",100,-4,4)\n",
    "h_Phi_pip=TH1F(\"h_Phi_pip\",\"reco pi+ Phi distribution\",100,-4,4)\n",
    "h_Phi_pim=TH1F(\"h_Phi_pim\",\"reco pi- Phi distribution\",100,-4,4)\n",
    "hNumK=TH1F(\"hNumK\",\"reco K vs pt\",100,0,25)\n",
    "hNumKp=TH1F(\"hNumKp\",\"reco K+ vs pt\",100,0,25)\n",
    "hNumKm=TH1F(\"hNumKm\",\"reco K- vs pt\",100,0,25)\n",
    "hNumpi=TH1F(\"hNumpi\",\"reco pi vs pt\",100,0,25)\n",
    "hNumpip=TH1F(\"hNumpip\",\"reco pi+ vs pt\",100,0,25)\n",
    "hNumpim=TH1F(\"hNumpim\",\"reco pi- vs pt\",100,0,25)\n",
    "hNum=TH1F(\"hNum\",\"reco K/pi vs pt\",100,0,25)\n",
    "hDen=TH1F(\"hDen\",\"gen K/pi vs pt\",100,0,25)\n",
    "hDenK=TH1F(\"hDenK\",\"gen K vs pt\",100,0,25)\n",
    "hDenKp=TH1F(\"hDenKp\",\"gen K+ vs pt\",100,0,25)\n",
    "hDenKm=TH1F(\"hDenKm\",\"gen K- vs pt\",100,0,25)\n",
    "hDenpi=TH1F(\"hDenpi\",\"gen pi vs pt\",100,0,25)\n",
    "hDenpip=TH1F(\"hDenpip\",\"gen pi+ vs pt\",100,0,25)\n",
    "hDenpim=TH1F(\"hDenpim\",\"gen pi- vs pt\",100,0,25)\n",
    "hdR=TH1F(\"hdR\",\"dR distribution\",1000,0,1)            \n",
    "hdRK=TH1F(\"hdRK\",\"dR distribution (K)\",100,0,0.02)\n",
    "hdRpi=TH1F(\"hdRpi\",\"dR distribution (pi)\",100,0,1)\n",
    "hNumPhi=TH1F(\"hNumPhi\",\"reco Phi vs pt\",100,0,25)\n",
    "hDenPhi=TH1F(\"hDenPhi\",\"Gen Phi vs pt\",100,0,25)\n",
    "hNumKs=TH1F(\"hNumKs\",\"reco Ks vs pt\",100,0,25)\n",
    "hDenKs=TH1F(\"hDenKs\",\"Gen Ks vs pt\",100,0,25)\n",
    "hdRPhi=TH1F(\"hdRPhi\",\"dR distribution (Phi)\",100,0,25)\n",
    "hdRKs=TH1F(\"hdRKs\",\"dR distribution (Ks)\",100,0,25)\n",
    "hNumB=TH1F(\"hNumB\",\"reco B vs pt\",100,0,25)\n",
    "hDenB=TH1F(\"hDenB\",\"gen B vs pt\",100,0,25)\n",
    "hdRB=TH1F(\"hdRB\",\"dR distribution (B)\",100,0,25)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 227,
   "id": "4536afe0",
   "metadata": {},
   "outputs": [],
   "source": [
    "def matching1(tree,p,m,hDen,hNum,hdR,th,hIM):\n",
    "    matches=[]\n",
    "    for plus in p:\n",
    "        for minus in m:\n",
    "            if plus[1]==minus[1]:\n",
    "                pt=tree.GenPart_pt[plus[1]]\n",
    "                eta=tree.GenPart_pt[plus[1]]\n",
    "                phi=tree.GenPart_pt[plus[1]]\n",
    "                mass=tree.GenPart_mass[plus[1]]\n",
    "                GenMother=TLorentzVector()\n",
    "                GenMother.SetPtEtaPhiM(pt,eta,phi,mass)\n",
    "                RecoMother=plus[2]+minus[2]\n",
    "                dr=GenMother.DeltaR(RecoMother)\n",
    "                hIM.Fill(RecoMother.M())\n",
    "                hdR.Fill(dr)\n",
    "                if dr<th:\n",
    "                    hNum.Fill(pt)\n",
    "                    matches.append((GenMother,tree.GenPart_genPartIdxMother[plus[1]],RecoMother))\n",
    "    return matches          "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 228,
   "id": "b168938d",
   "metadata": {},
   "outputs": [],
   "source": [
    "def matching2 (Gp,Tp):\n",
    "    pdg = ROOT.TDatabasePDG.Instance()\n",
    "    mK=[]\n",
    "    mpi=[]\n",
    "    go=True\n",
    "    while go:\n",
    "        go=False\n",
    "        match=dict()\n",
    "        i=0\n",
    "        while i<(len(Gp)):\n",
    "            dR0=1000\n",
    "            idx=0\n",
    "            for j in range(len(Tp)):\n",
    "                dR=Gp[i][0].DeltaR(Tp[j])\n",
    "                if dR<dR0:\n",
    "                    dR0=dR\n",
    "                    idx=j\n",
    "            if abs(Gp[i][2])==211 and dR0<0.1:\n",
    "                if idx in match:\n",
    "                    go=True\n",
    "                    match[idx].add((i,dR0))\n",
    "                else:\n",
    "                    match[idx]={(i,dR0)}\n",
    "                i+=1\n",
    "            elif abs(Gp[i][2])==321 and dR0<0.02:\n",
    "                if idx in match:\n",
    "                    go=True\n",
    "                    match[idx].add((i,dR0))\n",
    "                else:\n",
    "                    match[idx]={(i,dR0)}\n",
    "                i+=1\n",
    "            else:\n",
    "                hdR.Fill(dR0)\n",
    "                if abs(Gp[i][2])==321:\n",
    "                    hdRK.Fill(dR0)\n",
    "                if abs(Gp[i][2])==211:\n",
    "                    hdRpi.Fill(dR0)\n",
    "                del Gp[i]\n",
    "        l_g=[]\n",
    "        l_t=[]\n",
    "        for e in match:\n",
    "            dr=1000\n",
    "            ind=0\n",
    "            for el in match[e]:\n",
    "                if el[1]<dr:\n",
    "                    dr=el[1]\n",
    "                    ind=el[0]\n",
    "            hdR.Fill(dr)\n",
    "            Tp[e].SetPtEtaPhiM(Tp[e].Pt(),Tp[e].Eta(),Tp[e].Phi(),pdg.GetParticle(Gp[ind][2]).Mass())\n",
    "            if Gp[ind][2]==321:\n",
    "                hNum.Fill(Gp[ind][3])\n",
    "                hNumK.Fill(Gp[ind][3])\n",
    "                hNumKp.Fill(Gp[ind][3])\n",
    "                hdRK.Fill(dr)\n",
    "                mK.append((Gp[ind][0],Gp[ind][1],Tp[e]))\n",
    "            elif Gp[ind][2]==-321:\n",
    "                hNum.Fill(Gp[ind][3])\n",
    "                hNumK.Fill(Gp[ind][3])\n",
    "                hNumKm.Fill(Gp[ind][3])\n",
    "                hdRK.Fill(dr)\n",
    "                mK.append((Gp[ind][0],Gp[ind][1],Tp[e]))\n",
    "            elif Gp[ind][2]==211:\n",
    "                hNum.Fill(Gp[ind][3])\n",
    "                hNumpi.Fill(Gp[ind][3])\n",
    "                hNumpip.Fill(Gp[ind][3])\n",
    "                hdRpi.Fill(dr)\n",
    "                mpi.append((Gp[ind][0],Gp[ind][1],Tp[e]))\n",
    "            else:\n",
    "                hNum.Fill(Gp[ind][3])\n",
    "                hNumpi.Fill(Gp[ind][3])\n",
    "                hNumpim.Fill(Gp[ind][3])\n",
    "                hdRpi.Fill(dr)\n",
    "                mpi.append((Gp[ind][0],Gp[ind][1],Tp[e]))\n",
    "            l_g.append(ind)\n",
    "            l_t.append(e)\n",
    "        l_g.sort(reverse=True)\n",
    "        l_t.sort(reverse=True)\n",
    "        for e in l_g:\n",
    "            del Gp[e]\n",
    "        for e in l_t:\n",
    "            del Tp[e]\n",
    "    return (mK,mpi)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "93273942",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "h_IM_Phi.Reset()\n",
    "h_IM_Ks.Reset()\n",
    "h_IM_B.Reset()\n",
    "h_pt_Kp.Reset()\n",
    "h_pt_Km.Reset()\n",
    "h_pt_pip.Reset()\n",
    "h_pt_pim.Reset()\n",
    "h_Eta_Kp.Reset()\n",
    "h_Eta_Km.Reset()\n",
    "h_Eta_pip.Reset()\n",
    "h_Eta_pim.Reset()\n",
    "h_Phi_Kp.Reset()\n",
    "h_Phi_Km.Reset()\n",
    "h_Phi_pip.Reset()\n",
    "h_Phi_pim.Reset()\n",
    "hNumK.Reset()\n",
    "hNumKp.Reset()\n",
    "hNumKm.Reset()\n",
    "hNumpi.Reset()\n",
    "hNumpip.Reset()\n",
    "hNumpim.Reset()\n",
    "hNum.Reset()\n",
    "hDen.Reset()\n",
    "hDenK.Reset()\n",
    "hDenKp.Reset()\n",
    "hDenKm.Reset()\n",
    "hDenpi.Reset()\n",
    "hDenpip.Reset()\n",
    "hDenpim.Reset()\n",
    "hdR.Reset()\n",
    "hdRK.Reset()\n",
    "hdRpi.Reset()\n",
    "hNumPhi.Reset()\n",
    "hDenPhi.Reset()\n",
    "hNumKs.Reset()\n",
    "hDenKs.Reset()\n",
    "hNumB.Reset()\n",
    "hDenB.Reset()\n",
    "hdRPhi.Reset()\n",
    "hdRB.Reset()\n",
    "hdRKs.Reset()\n",
    "pdg = ROOT.TDatabasePDG.Instance()\n",
    "for i in range(N):\n",
    "    tree.GetEntry(i)\n",
    "    Kp=[]\n",
    "    Km=[]\n",
    "    pip=[]\n",
    "    pim=[]\n",
    "    for id,midx,pt,eta,phi,st,mass in zip(tree.GenPart_pdgId,tree.GenPart_genPartIdxMother,tree.GenPart_pt,tree.GenPart_eta,tree.GenPart_phi,tree.GenPart_status,tree.GenPart_mass):\n",
    "        gmidx=tree.GenPart_genPartIdxMother[midx]\n",
    "        if abs(tree.GenPart_pdgId[gmidx])==511 and st==1:\n",
    "            if abs((tree.GenPart_pdgId[midx]))==333:\n",
    "                if id==321:\n",
    "                    hDenB.Fill(tree.GenPart_pt[gmidx])\n",
    "                    hDenPhi.Fill(tree.GenPart_pt[midx])\n",
    "                    hDen.Fill(pt)\n",
    "                    hDenK.Fill(pt)\n",
    "                    hDenKp.Fill(pt)\n",
    "                    GenP=TLorentzVector()\n",
    "                    GenP.SetPtEtaPhiM(pt,eta,phi,mass)\n",
    "                    Kp.append((GenP,midx,id,pt))\n",
    "                elif id==-321:\n",
    "                    hDen.Fill(pt)\n",
    "                    hDenK.Fill(pt)\n",
    "                    hDenKm.Fill(pt)\n",
    "                    GenP=TLorentzVector()\n",
    "                    GenP.SetPtEtaPhiM(pt,eta,phi,mass)\n",
    "                    Km.append((GenP,midx,id,pt))\n",
    "            elif abs((tree.GenPart_pdgId[midx]))==310:\n",
    "                if id==211:\n",
    "                    hDenKs.Fill(tree.GenPart_pt[midx])\n",
    "                    hDen.Fill(pt)\n",
    "                    hDenpi.Fill(pt)\n",
    "                    hDenpip.Fill(pt)\n",
    "                    GenP=TLorentzVector()\n",
    "                    GenP.SetPtEtaPhiM(pt,eta,phi,pdg.GetParticle(id).Mass())\n",
    "                    pip.append((GenP,midx,id,pt))\n",
    "                elif id==-211:\n",
    "                    hDen.Fill(pt)\n",
    "                    hDenpi.Fill(pt)\n",
    "                    hDenpim.Fill(pt)\n",
    "                    GenP=TLorentzVector()\n",
    "                    GenP.SetPtEtaPhiM(pt,eta,phi,pdg.GetParticle(id).Mass())\n",
    "                    pim.append((GenP,midx,id,pt))\n",
    "    Tp=[]\n",
    "    Tm=[]\n",
    "    for ch,t_pt,t_eta,t_phi,t_mass in zip(tree.Track_charge,tree.Track_pt,tree.Track_eta,tree.Track_phi,tree.Track_mass):\n",
    "        Track=TLorentzVector()\n",
    "        Track.SetPtEtaPhiM(t_pt,t_eta,t_phi,t_mass)\n",
    "        if ch==1:\n",
    "            Tp.append(Track)\n",
    "        elif ch==-1:\n",
    "            Tm.append(Track)\n",
    "    mKp,mpip=matching2(Kp+pip,Tp)\n",
    "    mKm,mpim=matching2(Km+pim,Tm)\n",
    "    for e in mKp:\n",
    "        h_pt_Kp.Fill(e[2].Pt())\n",
    "        h_Eta_Kp.Fill(e[2].Eta())\n",
    "        h_Phi_Kp.Fill(e[2].Phi())\n",
    "    for e in mKm:\n",
    "        h_pt_Km.Fill(e[2].Pt())\n",
    "        h_Eta_Km.Fill(e[2].Eta())\n",
    "        h_Phi_Km.Fill(e[2].Phi())\n",
    "    for e in mpip:\n",
    "        h_pt_pip.Fill(e[2].Pt())\n",
    "        h_Eta_pip.Fill(e[2].Eta())\n",
    "        h_Phi_pip.Fill(e[2].Phi())\n",
    "    for e in mpim:\n",
    "        h_pt_pim.Fill(e[2].Pt())\n",
    "        h_Eta_pim.Fill(e[2].Eta())\n",
    "        h_Phi_pim.Fill(e[2].Phi())\n",
    "    mPhi=matching1(tree,mKp,mKm,hDenPhi,hNumPhi,hdRPhi,20,h_IM_Phi)\n",
    "    mKs=matching1(tree,mpip,mpim,hDenKs,hNumKs,hdRKs,20,h_IM_Ks)\n",
    "    mB=matching1(tree,mPhi,mKs,hDenB,hNumB,hdRB,20,h_IM_B)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "10e0e372",
   "metadata": {},
   "outputs": [],
   "source": [
    "os.system(\"mkdir -p Plots\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8bf5c4c7",
   "metadata": {},
   "outputs": [],
   "source": [
    "c0=TCanvas(\"c0\",\"pt distributions\",200,10,700,500)\n",
    "c0.cd()\n",
    "h_pt_Kp.SetLineColor(2)\n",
    "h_pt_Km.SetLineColor(4)\n",
    "h_pt_pip.SetLineColor(6)\n",
    "h_pt_pim.SetLineColor(8)\n",
    "h_pt_Kp.SetStats(0) \n",
    "h_pt_Kp.Draw()\n",
    "h_pt_Km.Draw(\"same\")\n",
    "h_pt_pip.Draw(\"same\")\n",
    "h_pt_pim.Draw(\"same\")\n",
    "h_pt_Kp.SetTitle(\"Pt distributions\")\n",
    "h_pt_Kp.GetXaxis().SetTitle(\"p_{t} [Gev/c]\")\n",
    "h_pt_Kp.GetYaxis().SetTitle(\"number of tracks\")\n",
    "legend=TLegend(0.7,0.8,0.85,0.6)\n",
    "legend.AddEntry(h_pt_Kp,\"K+ p_{t}\")\n",
    "legend.AddEntry(h_pt_Km,\"K- p_{t}\")\n",
    "legend.AddEntry(h_pt_pip,\"pi+ p_{t}\")\n",
    "legend.AddEntry(h_pt_pim,\"pi- p_{t}\")\n",
    "ROOT.gStyle.SetLegendTextSize(0.05)\n",
    "legend.Draw()\n",
    "c0.Draw()\n",
    "c0.SaveAs(\"Plots/pt_distributions.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0c734137",
   "metadata": {},
   "outputs": [],
   "source": [
    "c00=TCanvas(\"c00\",\"Eta distributions\",200,10,700,500)\n",
    "c00.cd()\n",
    "h_Eta_Kp.SetLineColor(2)\n",
    "h_Eta_Km.SetLineColor(4)\n",
    "h_Eta_pip.SetLineColor(6)\n",
    "h_Eta_pim.SetLineColor(8)\n",
    "h_Eta_Kp.SetStats(0)\n",
    "h_Eta_Kp.Draw()\n",
    "h_Eta_Km.Draw(\"same\")\n",
    "h_Eta_pip.Draw(\"same\")\n",
    "h_Eta_pim.Draw(\"same\")\n",
    "h_Eta_Kp.SetTitle(\"Eta distributions\")\n",
    "h_Eta_Kp.GetXaxis().SetTitle(\"Eta\")\n",
    "h_Eta_Kp.GetYaxis().SetTitle(\"number of tracks\")\n",
    "legend=TLegend(0.7,0.8,0.85,0.6)\n",
    "legend.AddEntry(h_Eta_Kp,\"K+ Eta \")\n",
    "legend.AddEntry(h_Eta_Km,\"K- Eta\")\n",
    "legend.AddEntry(h_Eta_pip,\"pi+ Eta \")\n",
    "legend.AddEntry(h_Eta_pim,\"pi- Eta\")\n",
    "ROOT.gStyle.SetLegendTextSize(0.05)\n",
    "legend.Draw()\n",
    "c00.Draw()\n",
    "c00.SaveAs(\"Plots/Eta_distributions.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9b21c8ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "c000=TCanvas(\"c000\",\"Phi distributions\",200,10,700,500)\n",
    "c000.cd()\n",
    "h_Phi_Kp.SetLineColor(2)\n",
    "h_Phi_Km.SetLineColor(4)\n",
    "h_Phi_pip.SetLineColor(6)\n",
    "h_Phi_pim.SetLineColor(8)\n",
    "h_Phi_Kp.SetStats(0)\n",
    "h_Phi_Kp.Draw()\n",
    "h_Phi_Km.Draw(\"same\")\n",
    "h_Phi_pip.Draw(\"same\")\n",
    "h_Phi_pim.Draw(\"same\")\n",
    "h_Phi_Kp.SetTitle(\"Eta distributions\")\n",
    "h_Phi_Kp.GetXaxis().SetTitle(\"Eta\")\n",
    "h_Phi_Kp.GetYaxis().SetTitle(\"number of tracks\")\n",
    "legend=TLegend(0.7,0.8,0.85,0.6)\n",
    "legend.AddEntry(h_Phi_Kp,\"K+ Phi \")\n",
    "legend.AddEntry(h_Phi_Km,\"K- Phi\")\n",
    "legend.AddEntry(h_Phi_pip,\"pi+ Phi \")\n",
    "legend.AddEntry(h_Phi_pim,\"pi- Phi\")\n",
    "ROOT.gStyle.SetLegendTextSize(0.05)\n",
    "legend.Draw()\n",
    "c000.Draw()\n",
    "c000.SaveAs(\"Plots/Phi_distributions.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "299fb89f",
   "metadata": {},
   "outputs": [],
   "source": [
    "c0000=TCanvas(\"c0000\",\"Phi invariant mass\",200,10,700,500)\n",
    "c0000.cd()\n",
    "h_IM_Phi.Draw()\n",
    "h_IM_Phi.GetXaxis().SetTitle(\"invariant mass [Gev/c]\")\n",
    "h_IM_Phi.GetYaxis().SetTitle(\"number of couples K+K-\")\n",
    "c0000.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "25a9d6b8",
   "metadata": {},
   "outputs": [],
   "source": [
    "c00000=TCanvas(\"c00000\",\"Ks invariant mass\",200,10,700,500)\n",
    "c00000.cd()\n",
    "h_IM_Ks.Draw()\n",
    "h_IM_Ks.GetXaxis().SetTitle(\"invariant mass [Gev/c]\")\n",
    "h_IM_Ks.GetYaxis().SetTitle(\"number of couples pi+pi-\")\n",
    "c00000.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6d709872",
   "metadata": {},
   "outputs": [],
   "source": [
    "c000000=TCanvas(\"c000000\",\"Phi invariant mass\",200,10,700,500)\n",
    "c000000.cd()\n",
    "h_IM_B.Draw()\n",
    "h_IM_B.GetXaxis().SetTitle(\"invariant mass [Gev/c]\")\n",
    "h_IM_B.GetYaxis().SetTitle(\"number of quartets K+K-pi+pi-\")\n",
    "c000000.Draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "87e9b20c",
   "metadata": {},
   "outputs": [],
   "source": [
    "h=TH1F(\"h\",\"Efficiency(K) vs pt\",100,0,25)\n",
    "h.Reset()\n",
    "c1=TCanvas('c1','Efficiency K vs Pt',200,10,700,500)\n",
    "c1.cd()\n",
    "EffK_pt=TEfficiency(hNumK,hDenK)\n",
    "h.GetXaxis().SetTitle(\"Gen K p_{t} [Gev/c]\")\n",
    "h.GetYaxis().SetTitle(\"Efficiency\")\n",
    "ROOT.gStyle.SetOptStat(\"e\")\n",
    "h.SetStats(0)\n",
    "h.Draw()\n",
    "EffK_pt.Draw(\"same\")\n",
    "c1.Draw()\n",
    "c1.SaveAs(\"Plots/Efficiency(K)_vs_pt.png\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f870b060",
   "metadata": {},
   "outputs": [],
   "source": [
    "h1=TH1F(\"h1\",\"Efficiency(K+) vs pt\",100,0,25)\n",
    "h1.Reset()\n",
    "c1a=TCanvas('c1a','Efficiency K+ vs Pt',200,10,700,500)\n",
    "c1a.cd()\n",
    "EffKp_pt=TEfficiency(hNumKp,hDenKp)\n",
    "h1.GetXaxis().SetTitle(\"Gen K+ p_{t} [Gev/c]\")\n",
    "h1.GetYaxis().SetTitle(\"Efficiency\")\n",
    "h1.SetStats(0)\n",
    "h1.Draw()\n",
    "EffKp_pt.Draw(\"same\")\n",
    "c1a.Draw()\n",
    "c1a.SaveAs(\"Plots/Efficiency(K+)_vs_pt.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a90c36db",
   "metadata": {},
   "outputs": [],
   "source": [
    "h1b=TH1F(\"h1b\",\"Efficiency(K-) vs pt\",100,0,25)\n",
    "h1b.Reset()\n",
    "c1b=TCanvas('c1b','Efficiency K- vs Pt',200,10,700,500)\n",
    "c1b.cd()\n",
    "EffKm_pt=TEfficiency(hNumKm,hDenKm)\n",
    "h1b.GetXaxis().SetTitle(\"Gen K- p_{t} [Gev/c]\")\n",
    "h1b.GetYaxis().SetTitle(\"Efficiency\")\n",
    "h1b.SetStats(0)\n",
    "h1b.Draw()\n",
    "EffKm_pt.Draw(\"same\")\n",
    "c1b.Draw()\n",
    "c1b.SaveAs(\"Plots/Efficiency(K-)_vs_pt.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e74d9077",
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "h2=TH1F(\"h2\",\"Efficiency(pi) vs pt\",100,0,25)\n",
    "h2.Reset()\n",
    "c2=TCanvas('c2','Efficiency pi vs Pt',200,10,700,500)\n",
    "c2.cd()\n",
    "Effpi_pt=TEfficiency(hNumpi,hDenpi)\n",
    "h2.GetXaxis().SetTitle(\"Gen pi p_{t} [Gev/c]\")\n",
    "h2.GetYaxis().SetTitle(\"Efficiency\")\n",
    "h2.SetStats(0)\n",
    "h2.Draw()\n",
    "Effpi_pt.Draw(\"same\")\n",
    "c2.Draw()\n",
    "c2.SaveAs(\"Plots/Efficiency(pi)_vs_pt.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5c067ff8",
   "metadata": {},
   "outputs": [],
   "source": [
    "h2a=TH1F(\"h2a\",\"Efficiency(pi+) vs pt\",100,0,25)\n",
    "h2a.Reset()\n",
    "c2a=TCanvas('c2a','Efficiency pi+ vs Pt',200,10,700,500)\n",
    "c2a.cd()\n",
    "Effpip_pt=TEfficiency(hNumpip,hDenpip)\n",
    "h2a.GetXaxis().SetTitle(\"Gen pi+ p_{t} [Gev/c]\")\n",
    "h2a.GetYaxis().SetTitle(\"Efficiency\")\n",
    "h2a.SetStats(0)\n",
    "h2a.Draw()\n",
    "Effpip_pt.Draw(\"same\")\n",
    "c2a.Draw()\n",
    "c2a.SaveAs(\"Plots/Efficiency(pi+)_vs_pt.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cfab8a55",
   "metadata": {},
   "outputs": [],
   "source": [
    "h2b=TH1F(\"h2b\",\"Efficiency(pi-) vs pt\",100,0,25)\n",
    "h2b.Reset()\n",
    "c2b=TCanvas('c2b','Efficiency pi- vs Pt',200,10,700,500)\n",
    "c2b.cd()\n",
    "Effpim_pt=TEfficiency(hNumpim,hDenpim)\n",
    "h2b.GetXaxis().SetTitle(\"Gen pi- p_{t} [Gev/c]\")\n",
    "h2b.GetYaxis().SetTitle(\"Efficiency\")\n",
    "h2b.SetStats(0)\n",
    "h2b.Draw()\n",
    "Effpim_pt.Draw(\"same\")\n",
    "c2b.Draw()\n",
    "c2b.SaveAs(\"Plots/Efficiency(pi-)_vs_pt.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a2c39886",
   "metadata": {},
   "outputs": [],
   "source": [
    "h3=TH1F(\"h3\",\"Efficiency vs pt\",100,0,25)\n",
    "h3.Reset()\n",
    "c3=TCanvas('c3','Efficiency_Pt',200,10,700,500)\n",
    "c3.cd()\n",
    "Eff_pt=TEfficiency(hNum,hDen)\n",
    "h3.GetXaxis().SetTitle(\"Gen pi/K p_{t} [Gev/c]\")\n",
    "h3.GetYaxis().SetTitle(\"Efficiency\")\n",
    "h3.SetStats(0)\n",
    "h3.Draw()\n",
    "Eff_pt.Draw(\"same\")\n",
    "c3.Draw()\n",
    "c3.SaveAs(\"Plots/Efficiency_vs_pt.png\")\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "caf37e64",
   "metadata": {},
   "outputs": [],
   "source": [
    "c5=TCanvas(\"c5\",\"K\",200,10,700,500)\n",
    "c5.cd()\n",
    "hNumK.SetLineColor(2)\n",
    "hDenK.SetLineColor(4)\n",
    "hNumK.Draw()\n",
    "hDenK.Draw(\"same\")\n",
    "hNumK.SetTitle(\"Gen K compared to matched gen K vs pt\")\n",
    "hNumK.GetXaxis().SetTitle(\"Gen K p_{t} [Gev/c]\")\n",
    "hNumK.GetYaxis().SetTitle(\"number of Kaons\")\n",
    "legend=TLegend(0.6,0.8,0.85,0.6)\n",
    "legend.AddEntry(hNumK,\"matched gen K\")\n",
    "legend.AddEntry(hDenK,\"gen K\")\n",
    "ROOT.gStyle.SetLegendTextSize(0.05)\n",
    "legend.Draw()\n",
    "c5.Draw()\n",
    "c5.SaveAs(\"Plots/Gen_vs_Reco_K.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "340bb367",
   "metadata": {},
   "outputs": [],
   "source": [
    "c6=TCanvas(\"c6\",\"pi\",200,10,700,500)\n",
    "c6.cd()\n",
    "hNumpi.SetLineColor(2)\n",
    "hDenpi.SetLineColor(4)\n",
    "hNumpi.Draw()\n",
    "hDenpi.Draw(\"same\")\n",
    "hNumpi.SetTitle(\"Gen pi compared to matched gen pi vs pt\")\n",
    "hNumpi.GetXaxis().SetTitle(\"Gen pi p_{t} [Gev/c]\")\n",
    "hNumpi.GetYaxis().SetTitle(\"number of pions\")\n",
    "legend=TLegend(0.6,0.8,0.85,0.6)\n",
    "legend.AddEntry(hNumpi,\"matched gen pi\")\n",
    "legend.AddEntry(hDenpi,\"gen pi\")\n",
    "ROOT.gStyle.SetLegendTextSize(0.05)\n",
    "legend.Draw()\n",
    "c6.Draw()\n",
    "c6.SaveAs(\"Plots/Gen_vs_Reco_pi.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ba0dfd99",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "c9=TCanvas(\"c9\",\"dR\",200,10,700,500)\n",
    "hdR.Draw()\n",
    "c9.Draw()\n",
    "c9.SaveAs(\"Plots/dR.png\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e23552df",
   "metadata": {},
   "outputs": [],
   "source": [
    "c10=TCanvas(\"c10\",\"dR dei K\",200,10,700,500)\n",
    "hdRK.Draw()\n",
    "c10.Draw()\n",
    "c10.SaveAs(\"Plots/dR(K).png\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "320b83af",
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "c11=TCanvas(\"c11\",\"dR dei pi\",200,10,700,500)\n",
    "hdRpi.Draw()\n",
    "c11.Draw()\n",
    "c11.SaveAs(\"Plots/dR(pi).png\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "26509532",
   "metadata": {},
   "outputs": [],
   "source": [
    "h10=TH1F(\"h10\",\"Efficiency(Phi) vs pt\",100,0,25)\n",
    "h10.Reset()\n",
    "c12=TCanvas('c12','Efficiency Phi vs Pt',200,10,700,500)\n",
    "c12.cd()\n",
    "EffPhi_pt=TEfficiency(hNumPhi,hDenPhi)\n",
    "h10.GetXaxis().SetTitle(\"Gen Phi p_{t} [Gev/c]\")\n",
    "h10.GetYaxis().SetTitle(\"Efficiency\")\n",
    "h10.SetStats(0)\n",
    "h10.Draw()\n",
    "EffPhi_pt.Draw(\"same\")\n",
    "c12.Draw()\n",
    "c12.SaveAs(\"Plots/Efficiency(Phi)_vs_pt.png\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c32aa718",
   "metadata": {},
   "outputs": [],
   "source": [
    "h11=TH1F(\"h11\",\"Efficiency(Ks) vs pt\",100,0,25)\n",
    "h11.Reset()\n",
    "c13=TCanvas('c13','Efficiency Ks vs Pt',200,10,700,500)\n",
    "c13.cd()\n",
    "EffKs_pt=TEfficiency(hNumKs,hDenKs)\n",
    "h11.GetXaxis().SetTitle(\"Gen Phi p_{t} [Gev/c]\")\n",
    "h11.GetYaxis().SetTitle(\"Efficiency\")\n",
    "h11.SetStats(0)\n",
    "h11.Draw()\n",
    "EffKs_pt.Draw(\"same\")\n",
    "c13.Draw()\n",
    "c13.SaveAs(\"Plots/Efficiency(Ks)_vs_pt.png\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "03393e36",
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "c14=TCanvas(\"c14\",\"dR dei Phi\",200,10,700,500)\n",
    "hdRPhi.Draw()\n",
    "c14.Draw()\n",
    "c14.SaveAs(\"Plots/dR(Phi).png\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e9d88918",
   "metadata": {},
   "outputs": [],
   "source": [
    "c15=TCanvas(\"c15\",\"dR dei Ks\",200,10,700,500)\n",
    "hdRKs.Draw()\n",
    "c15.Draw()\n",
    "c15.SaveAs(\"Plots/dR(Ks).png\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "adec2d45",
   "metadata": {},
   "outputs": [],
   "source": [
    "h12=TH1F(\"h12\",\"Efficiency(B) vs pt\",100,0,25)\n",
    "h12.Reset()\n",
    "c16=TCanvas('c16','Efficiency B vs Pt',200,10,700,500)\n",
    "c16.cd()\n",
    "EffB_pt=TEfficiency(hNumB,hDenB)\n",
    "h12.GetXaxis().SetTitle(\"Gen Phi p_{t} [Gev/c]\")\n",
    "h12.GetYaxis().SetTitle(\"Efficiency\")\n",
    "h12.SetStats(0)\n",
    "h12.Draw()\n",
    "EffB_pt.Draw(\"same\")\n",
    "c16.Draw()\n",
    "c16.SaveAs(\"Plots/Efficiency(B)_vs_pt.png\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "14b9fb1d",
   "metadata": {},
   "outputs": [],
   "source": [
    "c17=TCanvas(\"c17\",\"dR dei B\",200,10,700,500)\n",
    "hdRB.Draw()\n",
    "c17.Draw()\n",
    "c17.SaveAs(\"Plots/dR(B).png\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9a91df80",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4f8cc9b4",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ddf93524",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2b9d7c77",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "15329d0b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "@webio": {
   "lastCommId": null,
   "lastKernelId": null
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
